# -*-tcl-*-

source ../pdcDefs.tcl

beginDocument {
    title "Picky Picky Game: HTML 4 versus REST - Alleged Literature"
    pdcMetadata
}

beginBody

h1 "Picky Picky Game: HTML 4 versus REST"
p id=tagline "Damian Cugley\u2019s Weblog"

emit {
    <p>
      <abbr title="Representation state transfer">REST</abbr> is
      largely based on using <abbr title="HyperText Transport
      Protocol">HTTP</abbr> as originally designed&mdash;which
      includes respecting the intended semantics of the methods
      <code>GET</code> and <code>POST</code> (basically, requests that
      add or change things should use <code>POST</code> and not
      <code>GET</code>; requests that view information without
      altering it should use <code>GET</code>, not <code>POST</code>).
      A flaw in the HTML&nbsp;4 definition makes this annoyingly
      difficult.
    </p>
    <p>
      Imagine I am designing a poll.  I want each candidate to have a
      graphical button that registers a vote for that candidate.  My
      first stab at this was to make each of these a link wrapped in
      an <code>a</code> element, with a different URL for each one:
    </p>
    <blockquote><code>&lt;a href=&quot;votes?p=13"&gt;&lt;img
      src=&quot;candidate13.png" ... /&gt;&lt/a&gt;</code>
    </blockquote>
    <p>
      This is not REST, however, because votes change the state of the
      underlying resource, and so this operation should not use the
      method code <code>GET</code>.  To use <code>POST</code>,
      I&nbsp;must wrap the whole ballot in a <code>form</code> and
      create the voting buttons with <code>input</code> elements of
      type <code>image</code>:
    </p>
    <blockquote>
      <code>&lt;input type="image" name="p" value="13"
          src=&quot;candidate13.png" ... /&gt;</code>
    </blockquote>
    <p>
      They are distinguished by having
      different values for the attribute <code>value</code>.  This
      would work, except that graphical submit-buttons, unlike the
      other types of form item, do not send the value of
      <code>value</code> with the form.  Fuck.
    </p>
    <p>
      This leaves me with two annoying alternatives.  I&nbsp;can
      revert to abusing the <code>GET</code> method (which works but
      is non-REST), or else I can use JavaScript to make the image
      buttons do what they should have done in the first place.  Grr.
    </p>
}

p [a 04.html#e20030413 13 April 2003]

endBody
endDocument